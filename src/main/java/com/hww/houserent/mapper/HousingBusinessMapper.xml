<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.hww.houserent.mapper.HousingBusinessMapper">

    <select id="getPropertyInformation" resultType="com.hww.houserent.entity.Housing_InformationEntity" parameterType="map">
        select * from housing_information where 1=1
         <if test="fyHxCode != null and fyHxCode != ''">
           and   community = #{fyXqCode}
         </if>
        <if test="fyXqCode != null and fyXqCode != ''">
            and apartment = #{fyHxCode}
        </if>
        <if test="fyDhCode != null and fyDhCode != ''">
            and building_number = #{fyDhCode}
        </if>
        <if test="fyStatus != null and fyStatus != ''">
            and state = #{fyStatus}
        </if>
         ORDER BY community
    </select>

    <delete id="SingleDeletion" parameterType="Integer">
        delete from housing_information where id = #{id}
    </delete>

    <select id="getHousingInformation" parameterType="Integer"
            resultType="com.hww.houserent.entity.Housing_InformationEntity">
        select * from housing_information where id = #{id}
    </select>

    <select id="checkDuplication" parameterType="com.hww.houserent.entity.Housing_InformationEntity"
            resultType="com.hww.houserent.entity.Housing_InformationEntity">
        select * from housing_information where community=#{community} and building_number=#{building_number}
        and floor=#{floor} and room_number=#{room_number}
    </select>

    <update id="updataFanYuan" parameterType="com.hww.houserent.entity.Housing_InformationEntity">
        update housing_information set position=#{position},community=#{community},
        building_number=#{building_number},floor=#{floor},room_number=#{room_number},
        housing_area=#{housing_area},rental_area=#{rental_area},apartment=#{apartment},
        building_structure=#{building_structure},nature_of_lease=#{nature_of_lease},
        state=#{state} where id = #{id}
    </update>

    <insert id="insertFanYuan" parameterType="com.hww.houserent.entity.Housing_InformationEntity">
        insert into housing_information(position,community,building_number,floor,
        room_number,housing_area,rental_area,apartment,building_structure,nature_of_lease,state)
        values (#{position},#{community}, #{building_number},#{floor},#{room_number},
        #{housing_area},#{rental_area},#{apartment},
        #{building_structure},#{nature_of_lease},#{state})
    </insert>

    <delete id="deleteFanYuan" parameterType="int[]">
            delete from housing_information where id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="SelectCommunity" resultType="String">
        select distinct community from housing_information
    </select>

    <select id="selectNumber" parameterType="String" resultType="String">
        select distinct building_number from housing_information where community = #{fyxq}
    </select>
    <select id="selectApartment" parameterType="map" resultType="String">
        select distinct apartment from housing_information where building_number = #{fyDhCode} and community = #{fyXqCode}
    </select>
    <select id="selectState" parameterType="map" resultType="String">
        select distinct state from housing_information where building_number = #{fyDhCode} and community = #{fyXqCode} and apartment=#{fyHxCode}
    </select>
</mapper>
